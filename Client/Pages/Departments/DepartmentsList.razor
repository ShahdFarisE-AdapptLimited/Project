@page "/departments"
@using Client.Models
@using Client.Services
@inject NavigationManager NavigationManager
@inject IDepartmentService _departmentService
@inject IEmployeeService _employeeService


@if (Departments is null)
{
    <p>Loading ....</p>
}
else
{
    <DepartmentsListBox 
                        Departments="@Departments"
                        Employees="@Employees"
                        SelectedValue="SelectedItemId"
                        ValueChanged="OnSelectionChanged"
                        ChosenEmployee="@choosenEmployee"
                        EmployeeAdded="OnEmployeeAdded">
    </DepartmentsListBox>



}

@code {

    private List<Department>? Departments { get; set; }
    private List<Employee>? Employees { get; set; }
    private int SelectedItemId { get; set; }

    private int choosenEmployee { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Departments = (await _departmentService.GetAllDepartmetsAsync())?.ToList();


        Employees = (await _employeeService.GetAllEmployeesAsync())?.ToList();
    }

    private void OnSelectionChanged(int newSelectedValue)
    {
        SelectedItemId = newSelectedValue;
    }

    private async Task OnEmployeeAdded()
    {
        var employee = await _employeeService.GetEmployeeByIdAsync(choosenEmployee);
        await _departmentService.AddEmployee(choosenEmployee, employee);
    }
}
